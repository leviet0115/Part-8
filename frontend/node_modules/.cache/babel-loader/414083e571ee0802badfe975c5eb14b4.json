{"ast":null,"code":"var _jsxFileName = \"/Users/le.viet/Part-8/frontend/src/components/NewBook.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { ALL_AUTHORS } from \"./Authors\";\nimport { ALL_BOOKS } from \"./Books\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewBook = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [published, setPublished] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const ADD_BOOK = gql`\n    mutation AddBook(\n      $title: String!\n      $author: String!\n      $published: Int!\n      $genres: [String!]!\n    ) {\n      addBook(\n        title: $title\n        author: $author\n        published: $published\n        genres: $genres\n      ) {\n        title\n        author\n      }\n    }\n  `;\n  const [addBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }, {\n      query: ALL_BOOKS\n    }]\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    const newBook = addBook({\n      variables: {\n        title,\n        author,\n        genres,\n        published: Number(published)\n      }\n    });\n    console.log(\"added\", newBook);\n    setTitle(\"\");\n    setPublished(\"\");\n    setAuthor(\"\");\n    setGenres([]);\n    setGenre(\"\");\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setAuthor(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setPublished(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setGenre(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(\" \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"HVCBoW4vJzZ/zxpRokPzS9kaRgY=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"names":["useState","gql","useMutation","ALL_AUTHORS","ALL_BOOKS","NewBook","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","ADD_BOOK","addBook","refetchQueries","query","show","submit","event","preventDefault","newBook","variables","Number","console","log","addGenre","concat","target","value","join"],"sources":["/Users/le.viet/Part-8/frontend/src/components/NewBook.js"],"sourcesContent":["import { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { ALL_AUTHORS } from \"./Authors\";\nimport { ALL_BOOKS } from \"./Books\";\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [published, setPublished] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  const ADD_BOOK = gql`\n    mutation AddBook(\n      $title: String!\n      $author: String!\n      $published: Int!\n      $genres: [String!]!\n    ) {\n      addBook(\n        title: $title\n        author: $author\n        published: $published\n        genres: $genres\n      ) {\n        title\n        author\n      }\n    }\n  `;\n\n  const [addBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{ query: ALL_AUTHORS }, { query: ALL_BOOKS }],\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async (event) => {\n    event.preventDefault();\n\n    const newBook = addBook({\n      variables: { title, author, genres, published: Number(published) },\n    });\n\n    console.log(\"added\", newBook);\n\n    setTitle(\"\");\n    setPublished(\"\");\n    setAuthor(\"\");\n    setGenres([]);\n    setGenre(\"\");\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type=\"number\"\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">\n            add genre\n          </button>\n        </div>\n        <div>genres: {genres.join(\" \")}</div>\n        <button type=\"submit\">create book</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}