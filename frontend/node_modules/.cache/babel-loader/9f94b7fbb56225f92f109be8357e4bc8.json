{"ast":null,"code":"var _jsxFileName = \"/Users/le.viet/Part-8/frontend/src/components/Books.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Books = _ref => {\n  _s();\n\n  let {\n    books,\n    show\n  } = _ref;\n  const ALL_BOOKS = gql`\n    query {\n      allBooks {\n        author\n        published\n        title\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_BOOKS\n  /*{ pollInterval: 2000 }*/\n  );\n\n  if (!show) {\n    return null;\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), data.allBooks.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Books, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["gql","useQuery","Books","books","show","ALL_BOOKS","loading","error","data","allBooks","map","a","title","author","published"],"sources":["/Users/le.viet/Part-8/frontend/src/components/Books.js"],"sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\n\nconst Books = ({ books, show }) => {\n  const ALL_BOOKS = gql`\n    query {\n      allBooks {\n        author\n        published\n        title\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(\n    ALL_BOOKS /*{ pollInterval: 2000 }*/\n  );\n\n  if (!show) {\n    return null;\n  }\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n      <h2>books</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>author</th>\n            <th>published</th>\n          </tr>\n          {data.allBooks.map((a) => (\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author}</td>\n              <td>{a.published}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Books;\n"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AAEA,MAAMC,KAAK,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC,KAAF;IAASC;EAAT,CAAoB;EACjC,MAAMC,SAAS,GAAGL,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARE;EAUA,MAAM;IAAEM,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BP,QAAQ,CACvCI;EAAU;EAD6B,CAAzC;;EAIA,IAAI,CAACD,IAAL,EAAW;IACT,OAAO,IAAP;EACD;;EAED,IAAIE,OAAJ,EAAa;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAIC,KAAJ,EAAW;IACT,oBAAO;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBACE;QAAA,wBACE;UAAA,wBACE;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAMGC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAmBC,CAAD,iBACjB;UAAA,wBACE;YAAA,UAAKA,CAAC,CAACC;UAAP;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAKD,CAAC,CAACE;UAAP;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,UAAKF,CAAC,CAACG;UAAP;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA,GAASH,CAAC,CAACC,KAAX;UAAA;UAAA;UAAA;QAAA,QADD,CANH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAhDD;;GAAMV,K;UAW6BD,Q;;;KAX7BC,K;AAkDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}